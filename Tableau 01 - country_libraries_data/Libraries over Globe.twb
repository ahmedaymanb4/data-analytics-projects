<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Tableau01-country_libraries_data' path='/workbooks' revision='1.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1!Table1 (Tableau Project 01)' inline='true' name='federated.1hqcmb71f03p2y17wvb2i1wk9lu7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_libraries_data' name='excel-direct.0ea64jp14ve8a113a01ao1fdvxpv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/cs/DEPI/Assignment/Due 09-06/country_libraries_data.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ea64jp14ve8a113a01ao1fdvxpv' name='libraries_data' table='[Sheet1$Table1]' type='table'>
          <columns gridOrigin='A1:G220:no:A1:G221:0' header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Expenditures  (US Dollars)' ordinal='2' />
            <column datatype='integer' name='Total Libraries' ordinal='3' />
            <column datatype='integer' name='Total Librarians' ordinal='4' />
            <column datatype='integer' name='Total Volumes' ordinal='5' />
            <column datatype='integer' name='Total Users' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ea64jp14ve8a113a01ao1fdvxpv' name='libraries_data' table='[Sheet1$Table1]' type='table'>
          <columns gridOrigin='A1:G220:no:A1:G221:0' header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Expenditures  (US Dollars)' ordinal='2' />
            <column datatype='integer' name='Total Libraries' ordinal='3' />
            <column datatype='integer' name='Total Librarians' ordinal='4' />
            <column datatype='integer' name='Total Volumes' ordinal='5' />
            <column datatype='integer' name='Total Users' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[libraries_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G220:no:A1:G221:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[libraries_data]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LAR_REG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[libraries_data]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LAR_REG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Expenditures  (US Dollars)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Expenditures  (US Dollars)]</local-name>
            <parent-name>[libraries_data]</parent-name>
            <remote-alias>Expenditures  (US Dollars)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Libraries</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Libraries]</local-name>
            <parent-name>[libraries_data]</parent-name>
            <remote-alias>Total Libraries</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Librarians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Librarians]</local-name>
            <parent-name>[libraries_data]</parent-name>
            <remote-alias>Total Librarians</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Volumes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Volumes]</local-name>
            <parent-name>[libraries_data]</parent-name>
            <remote-alias>Total Volumes</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Users</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Users]</local-name>
            <parent-name>[libraries_data]</parent-name>
            <remote-alias>Total Users</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Expenditures per User' datatype='real' name='[Calculation_1562186179675459584]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Expenditures  (US Dollars)]/[Total Users]' />
      </column>
      <column caption='Expenditures per Librarian' datatype='real' name='[Calculation_1562186179678830593]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Expenditures  (US Dollars)]/[Total Librarians]' />
      </column>
      <column caption='Expenditures per Volume' datatype='real' name='[Calculation_1562186179679055874]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Expenditures  (US Dollars)]/[Total Volumes]' />
      </column>
      <column caption='Expenditures per Library' datatype='real' name='[Calculation_1765974062854905856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Expenditures  (US Dollars)]/[Total Libraries]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Total Librarians]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Libraries]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1 Table1' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Total Librarians]' derivation='Sum' name='[sum:Total Librarians:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Libraries]' derivation='Sum' name='[sum:Total Libraries:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Bebooo/AppData/Local/Temp/TableauTemp/#TableauTemp_0ei9vw717u41va1dsbhgr0klc0ll.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/07/2024 01:33:35 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>libraries_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LAR_RSA' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>1</ordinal>
              <family>libraries_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LAR_RSA' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Expenditures  (US Dollars)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Expenditures  (US Dollars)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Expenditures  (US Dollars)</remote-alias>
              <ordinal>2</ordinal>
              <family>libraries_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>147</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Libraries</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total Libraries]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Libraries</remote-alias>
              <ordinal>3</ordinal>
              <family>libraries_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>182</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Librarians</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total Librarians]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Librarians</remote-alias>
              <ordinal>4</ordinal>
              <family>libraries_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>130</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Volumes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total Volumes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Volumes</remote-alias>
              <ordinal>5</ordinal>
              <family>libraries_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Users</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total Users]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Users</remote-alias>
              <ordinal>6</ordinal>
              <family>libraries_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Librarians:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1hqcmb71f03p2y17wvb2i1wk9lu7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Libraries:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holy See (Vatican City)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin Islands, British&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo, Democratic Republic of&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virgin Islands, U.S.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo, Republic of the&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Egypt&quot;' />
      </semantic-values>
      <date-options start-of-week='saturday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1 Table1' id='Sheet1$Table1_1CBB97E26C2A4597A27B035E1AE54589'>
            <properties context=''>
              <relation connection='excel-direct.0ea64jp14ve8a113a01ao1fdvxpv' name='libraries_data' table='[Sheet1$Table1]' type='table'>
                <columns gridOrigin='A1:G220:no:A1:G221:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='integer' name='Expenditures  (US Dollars)' ordinal='2' />
                  <column datatype='integer' name='Total Libraries' ordinal='3' />
                  <column datatype='integer' name='Total Librarians' ordinal='4' />
                  <column datatype='integer' name='Total Volumes' ordinal='5' />
                  <column datatype='integer' name='Total Users' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Libraries by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
            <run>Æ </run>
            <run fontsize='9'>(Colored by expenditures in USD)</run>
            <run>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1!Table1 (Tableau Project 01)' name='federated.1hqcmb71f03p2y17wvb2i1wk9lu7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hqcmb71f03p2y17wvb2i1wk9lu7'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Expenditures  (US Dollars)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Librarians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Libraries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Users]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Expenditures  (US Dollars)]' derivation='Sum' name='[sum:Expenditures  (US Dollars):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Librarians]' derivation='Sum' name='[sum:Total Librarians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Libraries]' derivation='Sum' name='[sum:Total Libraries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Users]' derivation='Sum' name='[sum:Total Users:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]' value='auto' />
          </style-rule>
          <style-rule element='table'>
            <format attr='alternate-text' field='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Libraries:qk]' value='' />
            <format attr='display-alternate-text' field='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Libraries:qk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]' />
              <color column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Expenditures  (US Dollars):qk]' />
              <lod column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Librarians:qk]' />
              <lod column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Libraries:qk]' />
              <lod column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Users:qk]' />
              <geometry column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[Latitude (generated)]</rows>
        <cols>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BD23C649-E03B-4667-9605-01F0C079FDED}' />
    </worksheet>
    <worksheet name='Regional Expenditures per each field'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1!Table1 (Tableau Project 01)' name='federated.1hqcmb71f03p2y17wvb2i1wk9lu7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hqcmb71f03p2y17wvb2i1wk9lu7'>
            <column caption='Expenditures per User' datatype='real' name='[Calculation_1562186179675459584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Expenditures  (US Dollars)]/[Total Users]' />
            </column>
            <column caption='Expenditures per Librarian' datatype='real' name='[Calculation_1562186179678830593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Expenditures  (US Dollars)]/[Total Librarians]' />
            </column>
            <column caption='Expenditures per Volume' datatype='real' name='[Calculation_1562186179679055874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Expenditures  (US Dollars)]/[Total Volumes]' />
            </column>
            <column caption='Expenditures per Library' datatype='real' name='[Calculation_1765974062854905856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Expenditures  (US Dollars)]/[Total Libraries]' />
            </column>
            <column datatype='integer' name='[Expenditures  (US Dollars)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Librarians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Libraries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Users]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Volumes]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1562186179675459584]' derivation='Sum' name='[sum:Calculation_1562186179675459584:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1562186179678830593]' derivation='Sum' name='[sum:Calculation_1562186179678830593:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1562186179679055874]' derivation='Sum' name='[sum:Calculation_1562186179679055874:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1765974062854905856]' derivation='Sum' name='[sum:Calculation_1765974062854905856:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Calculation_1562186179678830593:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Calculation_1765974062854905856:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Calculation_1562186179675459584:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Calculation_1562186179679055874:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[:Measure Names]</column>
            <column>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[:Measure Names]' value='161' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Region:nk]</rows>
        <cols>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{71B2A0CF-FD66-46E9-AF2E-BA777CECE421}' />
    </worksheet>
    <worksheet name='Users by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
            <run>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1!Table1 (Tableau Project 01)' name='federated.1hqcmb71f03p2y17wvb2i1wk9lu7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hqcmb71f03p2y17wvb2i1wk9lu7'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total Users]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Volumes]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Users]' derivation='Sum' name='[sum:Total Users:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Volumes]' derivation='Sum' name='[sum:Total Volumes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Anguilla&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cape Verde&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo, Democratic Republic of&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo, Republic of the&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Côte d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Curaçao&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Falkland Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Guiana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guadeloupe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Holy See (Vatican City)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macao&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Martinique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montserrat&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palestine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Réunion&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;São Tomé and Príncipe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Swaziland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turks and Caicos Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands, British&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands, U.S.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]' direction='DESC' using='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Users:qk]' />
          <filter class='quantitative' column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]' included-values='all' />
          <slices>
            <column>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]</column>
            <column>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Users:qk]' />
              <color column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Users:qk]' />
              <text column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{430DE904-1CEB-49D4-B4DC-8E5BCDC185D6}' />
    </worksheet>
    <worksheet name='Volumes by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
            <run>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1!Table1 (Tableau Project 01)' name='federated.1hqcmb71f03p2y17wvb2i1wk9lu7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hqcmb71f03p2y17wvb2i1wk9lu7'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total Volumes]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Volumes]' derivation='Sum' name='[sum:Total Volumes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Anguilla&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cape Verde&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo, Democratic Republic of&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo, Republic of the&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Côte d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Curaçao&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Falkland Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Guiana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guadeloupe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Holy See (Vatican City)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macao&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Martinique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montserrat&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palestine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Réunion&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;São Tomé and Príncipe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Swaziland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turks and Caicos Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands, British&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands, U.S.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]' direction='DESC' using='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]' />
          <filter class='quantitative' column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]' included-values='all' />
          <slices>
            <column>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]</column>
            <column>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]' />
              <color column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]' />
              <text column='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E700AFA1-42CA-4A0D-B42F-4C91038F09D7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Libraries over Globe'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>&lt;Sheet Name&gt; - Dashboard </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size minheight='560' minwidth='420' sizing-mode='range' />
      <datasources>
        <datasource caption='Sheet1!Table1 (Tableau Project 01)' name='federated.1hqcmb71f03p2y17wvb2i1wk9lu7' />
      </datasources>
      <datasource-dependencies datasource='federated.1hqcmb71f03p2y17wvb2i1wk9lu7'>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Total Volumes]' role='measure' type='quantitative' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Total Volumes]' derivation='Sum' name='[sum:Total Volumes:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='54206' id='19' param='horz' type-v2='layout-flow' w='79579' x='468' y='4673'>
            <zone fixed-size='703' h='54206' id='37' is-fixed='true' name='Users by Country' w='39789' x='468' y='4673'>
              <layout-cache type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='695' h='54206' id='24' is-fixed='true' name='Volumes by Country' w='39790' x='40257' y='4673'>
              <layout-cache type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='36448' id='17' name='Libraries by Country' w='42306' x='468' y='58879'>
            <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='160' h='94392' id='41' is-fixed='true' type-v2='layout-basic' w='19485' x='80047' y='4673'>
            <zone h='94392' id='43' is-fixed='true' type-v2='layout-basic' w='19485' x='80047' y='4673'>
              <zone h='54206' id='42' param='vert' type-v2='layout-flow' w='19485' x='80047' y='4673'>
                <zone fixed-size='47' h='5491' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='19485' x='80047' y='4673'>
                  <zone h='5491' id='32' name='Volumes by Country' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]' type-v2='filter' values='database' w='19485' x='80047' y='4673'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='40186' id='44' param='vert' type-v2='layout-flow' w='19485' x='80047' y='58879'>
                <zone fixed-size='24' h='3739' id='25' is-fixed='true' name='Volumes by Country' pane-specification-id='0' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]' type-v2='color' w='19485' x='80047' y='58879'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='3739' id='38' is-fixed='true' name='Users by Country' pane-specification-id='0' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Users:qk]' type-v2='color' w='19485' x='80047' y='62618'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='3738' id='13' type-v2='title' w='99064' x='468' y='935'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='749' h='27102' id='16' is-fixed='true' name='Regional Expenditures per each field' w='37273' x='42774' y='58879'>
            <layout-cache type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='13084' id='23' name='Regional Expenditures per each field' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Region:nk]' type-v2='filter' values='database' w='37273' x='42774' y='85981'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='24' h='3738' id='20' is-fixed='true' name='Libraries by Country' pane-specification-id='0' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Expenditures  (US Dollars):qk]' type-v2='color' w='42306' x='468' y='95327'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run underline='true'>&lt;Sheet Name&gt; - Dashboard </run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98130' id='47' param='vert' type-v2='layout-flow' w='99064' x='468' y='935'>
                <zone h='3738' id='13' type-v2='title' w='99064' x='468' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54206' id='37' is-fixed='true' name='Users by Country' w='39789' x='468' y='4673'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='3739' id='38' name='Users by Country' pane-specification-id='0' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Users:qk]' type-v2='color' w='19485' x='80047' y='62618'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5491' id='32' name='Volumes by Country' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]' type-v2='filter' values='database' w='19485' x='80047' y='4673'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54206' id='24' is-fixed='true' name='Volumes by Country' w='39790' x='40257' y='4673'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='3739' id='25' name='Volumes by Country' pane-specification-id='0' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]' type-v2='color' w='19485' x='80047' y='58879'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='196' h='36448' id='17' is-fixed='true' name='Libraries by Country' w='42306' x='468' y='58879'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='3738' id='20' name='Libraries by Country' pane-specification-id='0' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Expenditures  (US Dollars):qk]' type-v2='color' w='42306' x='468' y='95327'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13084' id='23' mode='checkdropdown' name='Regional Expenditures per each field' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Region:nk]' type-v2='filter' values='database' w='37273' x='42774' y='85981'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='143' h='27102' id='16' is-fixed='true' name='Regional Expenditures per each field' w='37273' x='42774' y='58879'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{57F34D04-4DCE-4CDC-B76E-06F211282442}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Libraries over Globe'>
      <viewpoints>
        <viewpoint name='Libraries by Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Regional Expenditures per each field' />
        <viewpoint name='Users by Country' />
        <viewpoint name='Volumes by Country' />
      </viewpoints>
      <active id='44' />
      <simple-id uuid='{B047B18B-0D80-42D9-AA58-081EB1A954D0}' />
    </window>
    <window class='worksheet' name='Libraries by Country'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Expenditures  (US Dollars):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[:Measure Names]</field>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]</field>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Region:nk]</field>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Expenditures  (US Dollars):qk]</field>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Libraries:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A54B2E63-8E4F-45F0-ADE8-5036B94E4278}' />
    </window>
    <window class='worksheet' name='Regional Expenditures per each field'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]</field>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8CB92A9-A559-4839-ACB4-B15ECBD390DF}' />
    </window>
    <window class='worksheet' name='Volumes by Country'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]</field>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Volumes:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDAECDD0-58C5-4754-8583-365C7F42E46F}' />
    </window>
    <window class='worksheet' name='Users by Country'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Users:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[none:Country:nk]</field>
            <field>[federated.1hqcmb71f03p2y17wvb2i1wk9lu7].[sum:Total Users:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3CBB164-D230-44BA-B7F3-F3E8E219BDC3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Libraries by Country' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Libraries over Globe' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Regional Expenditures per each field' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Users by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Volumes by Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAL3klEQVR4nO3d2W9b14HH8e8lLzdxFTdZi7XZiZ3KTTJpnBbp0xToBH2bl8FgMMBg/rz5
      B+ZhMEALtE3QFI1ip/Y4XmVrl0iJFPfl8p55kKFEjdLYcmiKPr/Pi0le6/gQ5ld3kXjoGGMM
      IpYKjHoCIqOkAMRq7rfv/M+f7rF6f2NUc5EheufmNTZrzVFP48I5FcBf7q3zX//7xajmIkP0
      SSHNl3uVUU/jwtEhkFjtzAAu5VL84sYi0bB71mYZY9fyaX42kztzW8LC/+8zn3E+Heew1uLd
      t2b52bV5Vu+v4w18itkknuezX6nzixtLrN7fIOwGKR818Dyfx1vl1z1/eUnxsMtEyOWtXArf
      GBYzCXbqba7l09zZrxAPucymJvjvB5ujnuprcWYAlXqLK7N5ykdNVu9vsF2u0Wh32dyvAsd7
      iEebJTb3qzjApVySdR1fjoWtWouoGyQWCpKLRtistXADDgftLgPf0B0M2G20Rz3N1+bMALZK
      R2yVjr73i/YO66fuD3yfclVXGMbBnkUv7hfxo5wE/20QIuNCV4HEagpArKYAxGoKQKymAMRq
      CkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYA
      xGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCs
      pgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoK
      QKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDE
      agpArKYAxGoKQKymAMRq7qgnIK/H+zOTZJORUU/jXEKBAAPfH8rYCsAS+VQQPxIc9TTOZTqe
      4KjXGsrYOgQSqykAyzRrNXqdDs1aDWPMqW3G97/z2EVijGHryRrV8sH3/p12s/lSY+oQyDI7
      a2uk83mq+yUyhTytep1QJEKjUmUilWLgeQw8j0AwSCKTJj8zM+opn+j3erQbDdK5HHc//zO5
      6Wl2n60zs7xIvVLFdV3KO7tMFvKkslnyM9M/OKb2AJbxen22Hz+h3+1S2tzCH/i0G03++sdP
      adfrOI5DMBTizqefUd7aHvV0TwkEgtQrVXaePuXu539hZ+0p+elLrN9/yJ3PPqdaPiAcCfPo
      qzs8+urOC42pPYBlrr7/Hr1Oh0gshjEGx3EwxnBpcYFILIbjOAAU5+YIuhfrpDnoBrn+4QcE
      AgGmn883EAhSmJ1l5aMPcQLH38+Xb9wgHHmxK14KwDJuKIQbCp35+LfFEhfvpeE4DrF4HIBI
      LHby+KuEqkMgsZoCEKspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsZoC
      EKspALGaAhCrKQCxmgIQq128972J/I2g41CMxYcytgKQC29gDIft9lDG1iGQWE0ByNgwxnD7
      j59ROzz80cbUIZAlom6Q+OC7y6GMg0jweNkTYwzVUplq+YC99U0q5RK5qSkOdna5tDBPs1an
      Wa+TLRZYvrHyQmMrAEsEnACuM547/ODzxboArr57AzccJjtV5Mndu3i9Plff/Sm7z9ZxQy4H
      u7ukspMvPPapABwHAt/6x+TN0fb61Pu9UU/jXBLe8Z4rEAgwe2X55PFP/v3fTm4X52YB+MlH
      N19q7FMBLK8s8XE4fO6JysXljOl3/2E7FcBGpc7q+v6o5iJD9M8fLwBw6/e/J5mZJD8zQyga
      wXVdWvUGpc1NcBymLl/GCTjsbWyQyRfw/QGZQoFuq0W33SaRyVCvVMjPzJysIzrOdA5gmbmr
      V9l8+IhWowHGZyKZpFVvEInFGHgeexvrTM3Ps/XwEZjjzwx48tc7TM3P82B1lemlRda/fsBv
      /vM/CLrj//I58xlcLaTZq7UIu0GavT4RN0g8HKLcaBNwHLqDAcv5NGvlGr+8Ms1GpYE38Nmr
      t3CAqdQE20dN3EAA3xiMMXj+xf3gBZt0222yl6YwxhCLJ6js7zO1ME/9sML00iKO4xCORrn5
      T7+mUT2ivL3NOzdvEk+l6DSbTE4VccPhk5WYx92ZAYTdIG4wwJVCmljYpdsfYIBCMsYH80Xu
      7RwyEXZZK9coNdqkY2Fy8ShzkwkuTyaotLos5FLMZuKU6m326i3ubv94127l/GavXDl1v3h5
      7vjPublTj4ejUSaSyZPtAO88P8G8tLAw5Fm+PmcGsF9vcW1qkkelKj3PJzMRoecNiEdC3N0+
      oFRvM5WawBhD1A1SaXUxBjp9j3bfo+cN6HoDGp0+jW6Prjd43c9L5IWcGUC50aHc2D25X+t8
      c/nscekIgLWDGgC3NsvPt9SHNEWR4XkzDuREzkkBiNUUgFhNAYjVFIBYTQGI1RSAWE0BiNUU
      gFhNAYjVFIBYTQGI1cb/HQ3yxgs4DrlobChjKwC58HxjqPU7QxlbAchY8M1w3lGocwAZG8YY
      mrU6Xr8PgO/7+L7/SmNqDyBjwxjDV59+RnIyQ3JyknA4jOd5dNsdphfnqR1WmCwU6HY7HGzv
      srTyzg+uXKEAZKz0ez2MgfurtyjOzuAEAuw+W6dVr1OYnWF7bY3qwSHG91k01xWAvDkcxyF3
      6RLTiwvEk0lSuSxBN0gsEWdmaZHoxASP79xl8frbVErlF1q3SAFYIhuJnlpjc5ykI1Gq/TaO
      47Dy8+OVKbJTxZPtk4XCye1r//D+8+1TLzS2ArDEYbdDqd0a9TTOZZjd6iqQWE0BWKbTatHv
      9fAH379WU6/Twfg+vU6XdrN59t/pdjGveAnyItAhkGU2Hz4knc/T63RoVI+Ip1NsPnzE0soK
      R+UyuelpHt2+zQe/+ke++sMfmL9+nf31dZq1OjPLS2w9fsLU/GUe3rrN0spPaDeauCGXRvWI
      dD7HzPLyD0/iAlEAlvH6fQ62d3DDYRLpNPVKhcLsLKXNTfbW1+l1u6RyWQCCrovX73G4t8/U
      /DzPvr5POBJh7c5dJovF4xWlcUhkMsQSCby+N9ondw4KwDJLKys0qkeksllwID87w8Dz8H2f
      /OwMqWyOdqOBGwpx45cfM/A8slNTuOEwE8kkq7/9HTc/+TWdRoPE5CTdVot4KjXqp3VuCsAy
      kViMSOzs36xMpNMATCQTAITCYULf+sCUTCHPr/71XwBIZjIAxOLD+fze10UnwWI1BSBWUwBi
      NQUgVlMAYjUFIFZTAGI1BSBWUwBiNQUgVtOvQsiFF3QCTE8M51cuFIBceAPjU+4MZ2EsHQKJ
      1RSAjA1jDDtP1znY28f4Psb3efr1A4wxmHOuHKdDIBkr1YMD9tY3iEzEqFWqzF+9wr0vVkmm
      M1x+68pLj6cAZKxMXZ5j4HmEoxEy+RzZYpEn/3ePt99791zjKQAZG47jkC0WyBa/WQfIGEMq
      m8UNhc41ps4BZKw5jkMsPnHur1cAYjUFIFZTAGI1nQRbIhuNEgyM5+K4mUiUZksfkSSvoN7r
      UumO5+K44eDwwtUhkFhNAVjmcG+f/c2tk/ud1nf3Cl6/z+DvLJ77JtEhkGWqpTKNoyO67TZB
      16VRrYLjkJ+eZuvJE2aXl3lw6zY3fv4RiUx61NMdOgVgmcbREYlMmmqpDEDADbL7dJ2DnV0W
      rl/j/uqXx5++coHOlwOOQz56/h92/T0KwDLXP/yAcCRC7fAQJxAgHIlQmJ4mkUkTjkaZLBap
      lkrEEolRT/WEbwyVXnsoYysAy4QjEYDj1aGfK16eO7nthkLE4guvfV6jopNgGRvGGHqd7sl9
      3/fp93qvNKb2ADJWttae0qzVmF6YZ+PRY8Bh7uoyBzu7vP3eT3ECL/c9XXsAGSv+YEA8leLZ
      /YdMJBJ0Wi32N7e498WXdM/xvmHtAWSszF1Zxgk4zCzOU97dY2Z5kUAgwGQhTzgafenxFICM
      DcdxiMS+eZHPLi2e3J4451UrHQKJ1RSAWE0BiNUUgFhNAYjVFIBYTQGI1RSAWO3UD8Lms0k+
      XCiOai4yRJNj/qb40JDeF/z/x2WXsOPHelcAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
